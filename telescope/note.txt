<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://fonts.googleapis.com/css2?family=Orbitron&display=swap" rel="stylesheet">
    <title>James Webb Space Telescope 3D Model</title>
    <style>
        body {
            margin: 0;
            height: 200vh;
        }

        canvas {
            display: block;
        }

        main {
            position: absolute;
        }

        #info {
            position: absolute;
            top: 10px;
            left: 10px;
            color: black;
            background: rgba(255, 255, 255, 0.7);
            padding: 10px;
            border-radius: 5px;
        }

        section {
            width: 100%;
        }

        video {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            object-fit: cover;
            z-index: -1;
        }

        #details-button {
            position: fixed;
            bottom: 50px;
            left: 50%;
            transform: translateX(-50%);
            padding: 15px 30px;
            font-size: 1.3rem;
            font-family: 'Orbitron', sans-serif;
            color: #fff;
            background: linear-gradient(45deg, #0f202796, #203a438f, #2c53648a);
            border: 2px solid rgba(255, 255, 255, 0.479);
            border-radius: 10px;
            text-transform: uppercase;
            letter-spacing: 2px;
            cursor: pointer;
            z-index: 1;
            transition: box-shadow 0.3s ease, transform 0.3s ease, background 0.3s ease;
            box-shadow: 0 0 15px rgba(0, 170, 255, 0.6), 0 0 30px rgba(0, 170, 255, 0.4);
        }

        #details-button:hover {
            background: linear-gradient(45deg, #243b55, #141e30, #0f2027);
            transform: translateX(-50%) scale(1.05);
            box-shadow: 0 0 30px rgba(0, 170, 255, 0.8), 0 0 60px rgba(0, 170, 255, 0.6);
        }

        #arrow-left, #arrow-right {
            position: fixed;
            top: 50%;
            transform: translateY(-50%);
            background: rgba(255, 255, 255, 0.7);
            border: none;
            padding: 10px;
            font-size: 2rem;
            cursor: pointer;
            z-index: 1;
            border-radius: 50%;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
        }

        #arrow-left {
            left: 20px;
        }

        #arrow-right {
            right: 20px;
        }

        canvas {
            overflow-y: visible !important;
            height: 100%;
            position: fixed;
            pointer-events: none;
            width: 100%;
        }
    </style>
</head>

<body>

    <video id="background-video" autoplay loop muted playsinline>
        <source src="spacev.mp4" type="video/mp4">
    </video>
    <a href="index.html"> <button id="details-button">More Details</button></a>
    
    <!-- Arrow buttons -->
    <button id="arrow-left">&lt;</button>
    <button id="arrow-right">&gt;</button>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.min.js"></script>
    <script src="https://cdn.rawgit.com/mrdoob/three.js/r128/examples/js/loaders/GLTFLoader.js"></script>
    <script src="https://cdn.rawgit.com/mrdoob/three.js/r128/examples/js/controls/OrbitControls.js"></script>
    <script>
        let scene, camera, renderer, controls, videoTexture, model;

        function init() {
            // Scene setup
            scene = new THREE.Scene();

            // Get the video element
            const video = document.getElementById('background-video');
            video.play();

            // Create a video texture for the background
            videoTexture = new THREE.VideoTexture(video);
            videoTexture.minFilter = THREE.LinearFilter;
            videoTexture.magFilter = THREE.LinearFilter;
            videoTexture.format = THREE.RGBFormat;

            // Set the video texture as the scene background
            scene.background = videoTexture;

            // Set up the camera
            camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);
            camera.position.set(0, 0, 20);

            // Renderer
            renderer = new THREE.WebGLRenderer({ antialias: true });
            renderer.setSize(window.innerWidth, window.innerHeight);
            renderer.outputEncoding = THREE.sRGBEncoding;

            document.body.appendChild(renderer.domElement);

            // Controls for rotating the model
            controls = new THREE.OrbitControls(camera, renderer.domElement);

            // Load the 3D model (James Webb Space Telescope)
            const loader = new THREE.GLTFLoader();
            loader.load('jwst/scene.gltf', (gltf) => {
                model = gltf.scene;
                model.position.z = -10; // Set the initial position of the model
                scene.add(model);
            }, undefined, (error) => {
                console.error('An error happened:', error);
            });

            const ambientLight = new THREE.AmbientLight(0x808080, 1.0); // Neutral light
            scene.add(ambientLight);
            const directionalLight = new THREE.DirectionalLight(0xffffff, 1.3); // Directional light
            directionalLight.position.set(5, 5, 5);
            scene.add(directionalLight);

            animate();
        }

        function animate() {
            requestAnimationFrame(animate);
            controls.update();
            renderer.render(scene, camera);
        }

        // Arrow button click events for zooming
        document.getElementById('arrow-left').addEventListener('click', () => {
            camera.position.z += 1; // Zoom out
            if (model) model.rotation.y -= 1.5;
        });

        document.getElementById('arrow-right').addEventListener('click', () => {
            camera.position.z -= 1; // Zoom in
            if (model) model.rotation.y += 1.5;

        });

        init();
    </script>
</body>

</html>
